# NOTE: NOT USED ANYMORE
# This was used for the initial iteration. Now everything is deployed using Helm.
_services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper

  clickhouse:
    image: clickhouse/clickhouse-server:23.10.4.25
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - type: bind
        source: ./clickhouse-data
        target: /var/lib/clickhouse
      - type: bind
        source: ./clickhouse-server/schemas_path_config.xml
        target: /etc/clickhouse-server/config.d/schemas_path_config.xml
      - type: bind
        source: ./trade.proto
        target: /var/lib/clickhouse/format_schemas/trade.proto

  clickhouse-init:
    image: clickhouse/clickhouse-server:23.10.4.25-alpine
    container_name: clickhouse-init
    depends_on:
      - clickhouse
    volumes:
      - ./clickhouse-init:/clickhouse-init
      - type: bind
        source: ./trade.proto
        target: /clickhouse-init/trade.proto
    entrypoint: |
      bash -c "
      echo 'Waiting for ClickHouse server...';
      while ! nc -z clickhouse 9000; do sleep 1; done;
      clickhouse-client --host clickhouse --multiquery < /clickhouse-init/init.sql;
      "

  producer:
    build: ./producer
    container_name: producer
    volumes:
      - ./data:/data
    depends_on:
      - kafka
